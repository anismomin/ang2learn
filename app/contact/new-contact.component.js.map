{"version":3,"sources":["contact/new-contact.component.ts"],"names":["NewContact","NewContact.constructor","NewContact.onSubmit","NewContact.ngOnInit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;YAMA;gBA+BCA,oBAAoBA,eAA+BA,EAAUA,OAAeA,EAAUA,YAAyBA,EAAUA,YAA0BA;oBAA/HC,oBAAeA,GAAfA,eAAeA,CAAgBA;oBAAUA,YAAOA,GAAPA,OAAOA,CAAQA;oBAAUA,iBAAYA,GAAZA,YAAYA,CAAaA;oBAAUA,iBAAYA,GAAZA,YAAYA,CAAcA;gBAAGA,CAACA;gBAEvJD,6BAAQA,GAARA,UAASA,KAAKA;oBACbE,IAAIA,CAACA,eAAeA,CAACA,gBAAgBA,CAACA,KAAKA,CAACA,CAACA;oBAC7CA,IAAIA,CAACA,OAAOA,CAACA,QAAQA,CAACA,CAACA,UAAUA,CAACA,CAACA,CAACA;gBACrCA,CAACA;gBAEDF,6BAAQA,GAARA;oBACCG,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,CAACA,YAAYA,CAACA,KAAKA,CAACA;wBACrCA,WAAWA,EAAGA,CAACA,EAAEA,EAAEA,mBAAUA,CAACA,QAAQA,CAACA;wBACvCA,UAAUA,EAAEA,CAACA,IAAIA,CAACA,YAAYA,CAACA,GAAGA,CAACA,UAAUA,CAACA,EAAEA,mBAAUA,CAACA,QAAQA,CAACA;wBACpEA,OAAOA,EAAEA,CAACA,EAAEA,EAAEA,mBAAUA,CAACA,QAAQA,CAACA;qBAClCA,CAACA,CAACA;gBACJA,CAACA;gBA5CFH;oBAACA,gBAASA,CAACA;wBACVA,QAAQA,EAACA,8sBAmBRA;wBACDA,MAAMA,EAAEA,CAACA,2CAERA,CAACA;wBACFA,SAASA,EAAEA,CAACA,gCAAcA,CAACA;qBAC3BA,CAACA;;+BAoBDA;gBAADA,iBAACA;YAADA,CA7CA,AA6CCA,IAAA;YA7CD,mCA6CC,CAAA;;;;AAED,sDAAsD;AACtD,6EAA6E;AAC7E,sDAAsD;AAEtD,eAAe;AACf,eAAe;AACf,4DAA4D;AAC5D,gMAAgM;AAChM,qIAAqI;AACrI,gIAAgI;AAChI,iGAAiG;AACjG,kBAAkB;AAClB,MAAM;AACN,cAAc;AACd,yCAAyC;AACzC,OAAO;AACP,+BAA+B;AAC/B,KAAK;AAEL,4BAA4B;AAE5B,+BAA+B;AAE/B,wHAAwH;AAExH,gBAAgB;AAChB,4DAA4D;AAC5D,yCAAyC;AACzC,KAAK;AAEL,qBAAqB;AACrB,iGAAiG;AAEjG,KAAK;AACL,IAAI;AAEJ,sDAAsD;AACtD,wDAAwD;AACxD,sDAAsD;AAEtD,eAAe;AACf,eAAe;AACf,UAAU;AACV,kFAAkF;AAClF,2GAA2G;AAC3G,8EAA8E;AAC9E,+HAA+H;AAC/H,iBAAiB;AACjB,MAAM;AACN,+BAA+B;AAC/B,KAAK;AAEL,4BAA4B;AAE5B,sCAAsC;AAEtC,wHAAwH;AAExH,+CAA+C;AAE/C,oFAAoF;AACpF,yCAAyC;AAEzC,KAAK;AAEL,qBAAqB;AACrB,8DAA8D;AAE9D,KAAK;AACL,IAAI","file":"contact/new-contact.component.js","sourcesContent":["import {Component, OnInit} from 'angular2/core';\nimport {ContactService} from './contact.service';\nimport {Contact} from './contact';\nimport {Router, RouteParams} from 'angular2/router';\nimport {FormBuilder, Validators, ControlGroup} from 'angular2/common';\n\n@Component({\n\ttemplate:`\n\t\t<form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit(myForm.value)\">\n            <p><label>First Name : </label>\n            <input type=\"text\" \n            \t\n\t            [ngFormControl]=\"myForm.controls['firstname']\" > \n            </p>\n            <p><label>Last Name : </label>\n            <input type=\"text\" \n            \t\n\t            [ngFormControl]=\"myForm.controls['lastname']\"> \n            </p>\n            <p><label>Email Name : </label>\n            <input type=\"text\" \n            \t\n\t            [ngFormControl]=\"myForm.controls['email']\"> \n            </p>\n            <p><button [disabled]=\"!myForm.valid\">Create New Contact</button></p>\n        </form>\n\t`,\n\tstyles: [`\n\t\t.error {border: 1px solid red;}\n\t`],\n\tproviders: [ContactService]\n})\n\nexport class NewContact {\n\n\tmyForm: ControlGroup;\n\t\n\tconstructor(private _ContactService: ContactService, private _router: Router, private _routeParams: RouteParams, private _formBuilder : FormBuilder) {}\n\n\tonSubmit(value){\n\t\tthis._ContactService.createNewContact(value);\n\t\tthis._router.navigate(['Contacts']);\n\t}\n\t\n\tngOnInit(): any {\n\t\tthis.myForm = this._formBuilder.group({\n\t\t\t'firstname' : ['', Validators.required],\n\t\t\t'lastname': [this._routeParams.get('lastname'), Validators.required],\n\t\t\t'email': ['', Validators.required]\n\t\t});\n\t}\n}\n\n//////////////////////////////////////////////////////\n// 2. Bit Advance way WORK WITH FROM: ngControl this dont need any dependency\n//////////////////////////////////////////////////////\n\n// @Component({\n// \ttemplate: `\n// \t\t<form #newContactForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n//             <p><label>First Name : </label><input type=\"text\" required ngControl=\"firstname\" [(ngModel)]=\"newContact.firstname\" > <span *ngIf=\"!firstname.valid\">Field is required</span></p>\n//             <p><label>Last Name : </label><input type=\"text\" required ngControl=\"lastname\" [(ngModel)]=\"newContact.lastname\"> </p>\n//             <p><label>Email Name : </label><input type=\"text\" required ngControl=\"email\" [(ngModel)]=\"newContact.email\"> </p>\n//             <p><button [disabled]=\"!newContactForm.form.valid\">Create New Contact</button></p>\n//         </form>\n// \t`,\n// \tstyles: [`\n// \t\t.ng-invalid {border: 1px solid red;}\n// \t`],\n// \tproviders: [ContactService]\n// })\n\n// export class NewContact {\n\n// \tpublic newContact: Contact;\n\n// \tconstructor(private _ContactService: ContactService, private _router: Router, private _routeParams: RouteParams) { }\n\n// \tonSubmit() {\n// \t\tthis._ContactService.createNewContact(this.newContact);\n// \t\tthis._router.navigate(['Contacts']);\n// \t}\n\n// \tngOnInit(): any {\n// \t\tthis.newContact = { firstname: \"\", lastname: this._routeParams.get('lastname'), email: \"\" };\n\n// \t}\n// }\n\n//////////////////////////////////////////////////////\n// 1. BASIC WAY TO WORK WITH FROM: USING LOCAL VARIABLES\n//////////////////////////////////////////////////////\n\n// @Component({\n// \ttemplate: `\n// \t\t<div>\n//             <p><label>First Name : </label><input type=\"text\" #firstname > </p>\n//             <p><label>Last Name : </label><input type=\"text\" #lastname value=\"{{passsedlastname}}\"> </p>\n//             <p><label>Email Name : </label><input type=\"text\" #email > </p>\n//             <p><button (click)=\"addNewContact(firstname.value, lastname.value, email.value)\">Create New Contact</button></p>\n//         </div>\n// \t`,\n// \tproviders: [ContactService]\n// })\n\n// export class NewContact {\n\n// \tpublic passsedlastname = \"asdasd\";\n\n// \tconstructor(private _ContactService: ContactService, private _router: Router, private _routeParams: RouteParams) { }\n\n// \taddNewContact(firstname, lastname, email) {\n\n// \t\tthis._ContactService.createNewContact(new Contact(firstname, lastname, email));\n// \t\tthis._router.navigate(['Contacts']);\n\n// \t}\n\n// \tngOnInit(): any {\n// \t\tthis.passsedlastname = this._routeParams.get('lastname');\n\n// \t}\n// }"],"sourceRoot":"/source/"}